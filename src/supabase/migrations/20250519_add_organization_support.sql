-- Create organizations table to track organization details
CREATE TABLE IF NOT EXISTS organizations (
  id TEXT PRIMARY KEY, -- Organization ID from Clerk
  name TEXT NOT NULL, -- Organization display name (user-provided)
  slug TEXT, -- URL-friendly version of name (auto-generated by Clerk)
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW(),
  settings JSONB DEFAULT '{}'::jsonb -- For organization-specific settings
);

-- Add organization_id column to profiles table
ALTER TABLE profiles
ADD COLUMN organization_id TEXT REFERENCES organizations(id);

-- Add organization_id column to user_assets table
ALTER TABLE user_assets
ADD COLUMN organization_id TEXT REFERENCES organizations(id);

-- Create index for faster queries by organization
CREATE INDEX IF NOT EXISTS user_assets_organization_id_idx ON user_assets(organization_id);

-- Update RLS policies to support organization-based access
CREATE POLICY "Users can view their organization's assets" 
  ON user_assets 
  FOR SELECT 
  USING (
    auth.uid()::text = user_id OR
    organization_id IN (
      SELECT organization_id 
      FROM profiles 
      WHERE id = auth.uid()::text
    )
  );

-- Function to set updated_at on organization records
CREATE OR REPLACE FUNCTION update_organizations_updated_at()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Trigger to update the updated_at column
CREATE TRIGGER update_organizations_updated_at
BEFORE UPDATE ON organizations
FOR EACH ROW
EXECUTE FUNCTION update_organizations_updated_at();
